language: python
sudo: required
python:
- "3.6"
install:
- pip3 install -r requirements.txt
- pip3 install awscli
services:
- docker

jobs:
  include:
    - stage: python test
      script:
       - python3 -m pytest -v
    - stage: deploy to dockerhub
      script:
       - echo $DOCKER_PASS | docker login -u $DOCKER_USER --password-stdin
       - docker build -f Dockerfile -t $TRAVIS_REPO_SLUG:$TRAVIS_BUILD_NUMBER .
       - docker run --rm -p 5000:5000 -d $TRAVIS_REPO_SLUG:$TRAVIS_BUILD_NUMBER
       - docker ps | grep "$TRAVIS_REPO_SLUG:$TRAVIS_BUILD_NUMBER"
       - docker push $TRAVIS_REPO_SLUG
    - stage: try out terraform
      before_script:
      - curl -sLo /tmp/terraform.zip https://releases.hashicorp.com/terraform/0.12.6/terraform_0.12.6_linux_amd64.zip
      - unzip /tmp/terraform.zip -d /tmp
      - mv /tmp/terraform ~/bin
      - export PATH="~/bin:$PATH"
      - cd terraform/
      - terraform init
      script:
       - terraform plan -out=tfplan
       - terraform apply "tfplan" -auto-approve
    - stage: deploy to s3 and codedeploy app
      deploy:
      - provider: s3
        access_key_id: $AWS_ACCESS_KEY
        secret_access_key: $AWS_SECRET_KEY
        local_dir: pythontest
        skip_cleanup: true
        on:
          branch: master
        bucket: travisdeploy-s3
        region: us-east-2
      - provider: codedeploy
        access_key_id: $AWS_ACCESS_KEY
        secret_access_key: $AWS_SECRET_KEY
        bucket: travisdeploy-s3
        key: latest.zip
        bundle_type: zip
        application: travisdeploy-app
        deployment_group: travisdeploy-group
        region: us-east-2
        on:
          branch: master
      script:
        - zip -r latest *
        - mkdir -p pythontest
        - mv latest.zip pythontest/latest.zip
